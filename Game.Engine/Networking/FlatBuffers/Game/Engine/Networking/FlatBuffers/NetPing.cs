// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Game.Engine.Networking.FlatBuffers
{

using global::System;
using global::Google.FlatBuffers;

public struct NetPing : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static NetPing GetRootAsNetPing(ByteBuffer _bb) { return GetRootAsNetPing(_bb, new NetPing()); }
  public static NetPing GetRootAsNetPing(ByteBuffer _bb, NetPing obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public NetPing __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Time { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<NetPing> CreateNetPing(FlatBufferBuilder builder,
      long time = 0) {
    builder.StartObject(1);
    NetPing.AddTime(builder, time);
    return NetPing.EndNetPing(builder);
  }

  public static void StartNetPing(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddTime(FlatBufferBuilder builder, long time) { builder.AddLong(0, time, 0); }
  public static Offset<NetPing> EndNetPing(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<NetPing>(o);
  }
};


}
