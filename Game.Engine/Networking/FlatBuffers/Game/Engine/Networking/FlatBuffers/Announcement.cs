// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Game.Engine.Networking.FlatBuffers
{

using global::System;
using global::Google.FlatBuffers;

public struct Announcement : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Announcement GetRootAsAnnouncement(ByteBuffer _bb) { return GetRootAsAnnouncement(_bb, new Announcement()); }
  public static Announcement GetRootAsAnnouncement(ByteBuffer _bb, Announcement obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Announcement __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Text { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetTextBytes() { return __p.__vector_as_arraysegment(4); }

  public static Offset<Announcement> CreateAnnouncement(FlatBufferBuilder builder,
      StringOffset TextOffset = default(StringOffset)) {
    builder.StartObject(1);
    Announcement.AddText(builder, TextOffset);
    return Announcement.EndAnnouncement(builder);
  }

  public static void StartAnnouncement(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddText(FlatBufferBuilder builder, StringOffset TextOffset) { builder.AddOffset(0, TextOffset.Value, 0); }
  public static Offset<Announcement> EndAnnouncement(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Announcement>(o);
  }
};


}
